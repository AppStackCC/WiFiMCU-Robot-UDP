--setup a ap
cfg={ssid ='AppStackAP',pwd ='zaqxswcde'}
wifi.startap(cfg)
cfg=nil
--mcu demo
print("WiFiMCU firmware version")
print(mcu.ver())
print("mxchipWNet library version, MAC address, WLAN driver version")
print(mcu.info())
print("Get the memory status")
print(mcu.mem())
print("Get the stm32 chip ID (96 bits)")
print(mcu.chipid())
print("Get the WiFiMCU boot reason")
print(mcu.bootreason())
print("Reboot WiFiMCu")
gpio.mode(3,gpio.OUTPUT)
gpio.mode(4,gpio.OUTPUT)
gpio.mode(5,gpio.OUTPUT)
gpio.mode(6,gpio.OUTPUT)
gpio.write(3,gpio.LOW)
gpio.write(4,gpio.LOW)
gpio.write(5,gpio.LOW)
gpio.write(6,gpio.LOW)
print("udp server started")
skt = net.new(net.UDP,net.SERVER)
net.on(skt,"sent",function(clt) print("sent:clt:"..clt) end)
net.on(skt,"disconnect",function(clt) print("disconnect:clt:"..clt) end)
net.on(skt,"receive",function(clt,d)

	if string.byte(d,1) == 0 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("0")
	elseif string.byte(d,1) == 1 then
		gpio.write(3,gpio.HIGH)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.HIGH)
		print("1")
	elseif string.byte(d,1) == 2 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.HIGH)
		gpio.write(5,gpio.HIGH)
		gpio.write(6,gpio.LOW)
		print("2")
	elseif string.byte(d,1) == 3 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("3")
	elseif string.byte(d,1) == 4 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.HIGH)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.HIGH)
		print("4")
	elseif string.byte(d,1) == 5 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.HIGH)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("5")
	elseif string.byte(d,1) == 6 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.HIGH)
		print("6")
	elseif string.byte(d,1) == 7 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("7")
	elseif string.byte(d,1) == 8 then
		gpio.write(3,gpio.HIGH)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.HIGH)
		gpio.write(6,gpio.LOW)
		print("8")
	elseif string.byte(d,1) == 9 then
		gpio.write(3,gpio.HIGH)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("9")
	elseif string.byte(d,1) == 10 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.HIGH)
		gpio.write(6,gpio.LOW)
		print("10")
	elseif string.byte(d,1) == 11 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("11")
	elseif string.byte(d,1) == 12 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("12")
	elseif string.byte(d,1) == 13 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("13")
	elseif string.byte(d,1) == 14 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("14")
	elseif string.byte(d,1) == 15 then
		gpio.write(3,gpio.LOW)
		gpio.write(4,gpio.LOW)
		gpio.write(5,gpio.LOW)
		gpio.write(6,gpio.LOW)
		print("15")
	else
      		print("Other")
	end
end)

net.start(skt,60000)
